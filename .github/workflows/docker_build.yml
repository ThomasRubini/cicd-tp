name: Docker build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.dockerignore'
      - '.github/workflows/docker_build.yml'
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.gitignore'


jobs:
  build_docker:
    name: Docker build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    env:
      REGISTRY: ghcr.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}

    steps:
    - uses: actions/checkout@v4
    - name: Log in to the Container registry
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Needed to use gha caching
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3.10.0
      with: 
        driver: docker-container
        driver-opts: image=moby/buildkit:master,network=host

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5.7.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        # We want to tag every commit on main with the 'latest' tag
        # and every git tag with a corresponding docker tag
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=tag

    - name: Build Docker image and push on main
      id: push
      uses: docker/build-push-action@v6.15.0
      with:
        push: ${{ steps.meta.outputs.tags != '' }}
        context: .
        file: ./Dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2.2.3
      if: ${{ steps.meta.outputs.tags != '' }}
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
